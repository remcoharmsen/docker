version: '3'

services:
  homeassistant:
    container_name: home-assistant
    restart: unless-stopped
    image: homeassistant/home-assistant:latest
    volumes:
      - /home/remco/docker/homeassistant:/config
    network_mode: host
    privileged: true

  portainer:
    container_name: portainer
    restart: unless-stopped
    image: portainer/portainer
    volumes:
      - /home/remco/docker/portainer:/data
      - /home/remco/docker/shared:/shared
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9000:9000"
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
#      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.frontend.redirect.regex=^(.*)/portainer$$"
      - "traefik.frontend.redirect.replacement=$$1/portainer/"
      - "traefik.frontend.rule=PathPrefix:/portainer;ReplacePathRegex: ^/portainer/(.*) /$$1"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.auth.basic.usersFile=/shared/.htpasswd"
      - "traefik.frontend.auth.basic.removeHeader=true"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  influxdb:
    container_name: influxdb
    restart: unless-stopped
    image: influxdb
    volumes:
      - /home/remco/docker/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - /home/remco/docker/influxdb/db:/var/lib/influxdb
    environment:
      - INFLUX_GRAPHITE_ENABLED='true'
    ports:
      - "8086:8086"

  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana
    depends_on:
      - "influxdb"
    volumes:
      - /home/remco/docker/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'secret'
    user: "1000"

  mssql:
    image: bitwarden/mssql:1.19.0
    container_name: bitwarden-mssql
    restart: always
    volumes:
      - ./bwdata/mssql/data:/var/opt/mssql/data
      - ./bwdata/logs/mssql:/var/opt/mssql/log
      - ./bwdata/mssql/backups:/etc/bitwarden/mssql/backups
    env_file:
      - bwdata/docker/mssql.env
      - bwdata/env/uid.env
      - bwdata/env/mssql.override.env

  web:
    image: bitwarden/web:1.26.0
    container_name: bitwarden-web
    restart: always
    volumes:
      - ./bwdata/web:/etc/bitwarden/web
    env_file:
      - bwdata/env/uid.env

  attachments:
    image: bitwarden/attachments:1.19.0
    container_name: bitwarden-attachments
    restart: always
    volumes:
      - ./bwdata/core/attachments:/etc/bitwarden/core/attachments
    env_file:
      - bwdata/env/uid.env

  api:
    image: bitwarden/api:1.19.0
    container_name: bitwarden-api
    restart: always
    volumes:
      - ./bwdata/core:/etc/bitwarden/core
      - ./bwdata/ca-certificates:/etc/bitwarden/ca-certificates
      - ./bwdata/logs/api:/etc/bitwarden/logs
    env_file:
      - bwdata/docker/global.env
      - bwdata/env/uid.env
      - bwdata/env/global.override.env

  identity:
    image: bitwarden/identity:1.19.0
    container_name: bitwarden-identity
    restart: always
    volumes:
      - ./bwdata/identity:/etc/bitwarden/identity
      - ./bwdata/core:/etc/bitwarden/core
      - ./bwdata/ca-certificates:/etc/bitwarden/ca-certificates
      - ./bwdata/logs/identity:/etc/bitwarden/logs
    env_file:
      - bwdata/docker/global.env
      - bwdata/env/uid.env
      - bwdata/env/global.override.env

  admin:
    image: bitwarden/admin:1.19.0
    container_name: bitwarden-admin
    restart: always
    volumes:
      - ./bwdata/core:/etc/bitwarden/core
      - ./bwdata/ca-certificates:/etc/bitwarden/ca-certificates
      - ./bwdata/logs/admin:/etc/bitwarden/logs
    env_file:
      - bwdata/docker/global.env
      - bwdata/env/uid.env
      - bwdata/env/global.override.env

  icons:
    image: bitwarden/icons:1.19.0
    container_name: bitwarden-icons
    restart: always
    env_file:
      - bwdata/env/uid.env

  nginx:
    image: bitwarden/nginx:1.19.0
    container_name: bitwarden-nginx
    restart: always
    ports:
      - "8888:8443"
    volumes:
      - ./bwdata/nginx:/etc/bitwarden/nginx
      - ./bwdata/letsencrypt:/etc/letsencrypt
      - ./bwdata/ssl:/etc/ssl
      - ./bwdata//logs/nginx:/var/log/nginx
    env_file:
      - bwdata/env/uid.env
  
  esphomeyaml:
    image: ottowinter/esphomeyaml:dev
    container_name: esphomeyaml
    restart: always
    ports:
      - "6052:6052"
      - "6123:6123"
    volumes:
      - /home/remco/docker/esphomeyaml:/config
    command:
      - "/config"
      - "dashboard"
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true

  mqtt:
    container_name: mosquitto_mqtt
    image: eclipse-mosquitto:latest
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - /home/remco/docker/mosquitto/data:/mosquitto/data
      - /home/remco/docker/mosquitto/config:/mosquitto/config
      - /home/remco/docker/mosquitto/log:/mosquitto/log

  radicale:
    image: tomsquest/docker-radicale
    container_name: radicale
    ports:
      - "5232:5232"
    read_only: true
    volumes:
      - /home/remco/docker/radicale/data:/data
      - /home/remco/docker/radicale/config:/config

  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
#      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"  
      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/remco/docker/traefik:/etc/traefik
      - /home/remco/docker/shared:/shared



##################################################
# keep networks at the end #

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
